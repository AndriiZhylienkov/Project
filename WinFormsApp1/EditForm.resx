<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>